<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:id="@+id/container"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <com.google.android.material.bottomnavigation.BottomNavigationView
        android:id="@+id/bottom_nav_view"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginStart="0dp"
        android:layout_marginEnd="0dp"
        android:backgroundTint="@color/yellow"
        android:background="?android:attr/windowBackground"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toRightOf="parent"
        app:menu="@menu/bottom_nav_menu"/>

<!--    tools:context=".MainActivity" -->

<!--    In this nav_host_fragment-->
<!--    we gave it an id-->
<!--    and NAME extends a predefined kotlin module for Nav Host Fragment-->
<!--    -->
<!--    Then we add 2 more attribute -->
<!--    1st for default nav host and other -->
<!--    we attached navGraph to it.-->

<!--    The app:defaultNavHost="true"
        attribute ensures that your
        NavHostFragment intercepts the
        system Back button-->
    <fragment
        android:id="@+id/nav_host_fragment"
        android:name="androidx.navigation.fragment.NavHostFragment"

        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:layout_constraintBottom_toTopOf="@id/bottom_nav_view"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toRightOf="parent"

        app:defaultNavHost = "true"
        app:navGraph = "@navigation/nav_graph"/>





</androidx.constraintlayout.widget.ConstraintLayout>